def numOfQualWorkers(t, k):
    if t == 0:
        # do stuff
    else:
        return numOfQualWorkers(t - 1, k) - k * numOfAvailabeJob(t - 1)

def numOfAvailabeJob(t, k, newJobRate, RetireRate):
    if t == 0:
        # do stuff
    else:
        return numOfAvailabeJob(t - 1, k, newJobRate, RetireRate) + newJobRate +
    RetireRate - k*numOfAvailabeJob(t - 1, k, newJobRate, RetireRate)

def p(t, newJobRate, RetireRate, k):
    ans = (k * numOfAvailabeJob(t, k, newJobRate, RetireRate) / numOfQualWorkers(t, k))
    for i in range(1, time-1):
        ans *= (1 - p(i, newJobRate, RetireRate, k))
    return ans

def expectedValuePerYear(unemployRate, retirementRate, deltaUnemploy):
    ans = 0
    for i in range(1, 12):
        ans += i * p(unemployRate, i, retirementRate, deltaUnemploy)
    ans2 = 12
    for i in range(1, 13):
        ans2 *= (1 - p(unemployRate, i, retirementRate, deltaUnemploy))
    return ans + ans2
