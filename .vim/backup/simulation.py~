import random
import sys
from sys import argv

def coinFlip():
    return random.randrange(0,2) == 0


def run(a, b):
    # 0 is black (normal cells)
    # 1 is white (sickle allele)
    assert(a + b == 100)
    pool = [1] * a + [0] * b
    random.shuffle(pool)

    distribution = []

    for i in range(0, 100, 2):
        distribution.append(pool[i] + pool[i + 1])

    #print distribution

# Remove all the scd people
    while 2 in distribution:
        distribution.remove(2)

    #print distribution

# Flip COINS!!

    result = []

    #print len(distribution)

    for i in range(0, len(distribution), 4):
        if len(distribution) - i < 4:
            if coinFlip():
                for j in range(i, len(distribution)):
                    result.append(distribution[j])
            else:
                for j in range(i, len(distribution)):
                    if distribution[j] == 1:
                        result.append(distribution[j])
        else:
            if coinFlip():
                for j in range(i, i+4):
                    result.append(distribution[j])
            else:
                for j in range(i, i+4):
                    if distribution[j] == 1:
                        result.append(distribution[j])

    return result

def occurance(list1, element):
    counter = 0
    for i in list1:
        if i == element:
            counter += 1
    return counter

def convertToPercent(list1):
    num1 = str(float(list1[0]) / (list1[1] + list1[0])) + '0'*4
    num1 = round(float(num1[2:4] + '.' + num1[4]))
    num2 = 100 - num1
    return (int(num1), int(num2))

def usage():
    print """Bio Lab Data Generator:
usage: python simulation.py <initial normal percentage> <initial sickle percentage> <number of generations>"""
    sys.exit(1)

def main():
    #a = run(36, 64)
    #print "Normal: " + str(occurance(a, 0) * 2 + occurance(a, 1))
    #print "Sickle: " + str(occurance(a, 1))

    if len(argv) != 4:
        usage()

    APercent = int(argv[1])
    BPercent = int(argv[2])

    for i in range(0, int(argv[3])):
        distribution = run(APercent, BPercent)
        result = [occurance(distribution, 0), occurance(distribution, 1)]
        print "Generation %d" % (i)
        print "Normal: " + str(result[0] * 2 + result[1])
        print "Sickle: " + str(result[1])

        APercent = convertToPercent(result)[0]
        BPercent = convertToPercent(result)[1]

main()
